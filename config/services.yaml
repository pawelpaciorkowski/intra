# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  MAPBOX_TOKEN: '%env(MAPBOX_TOKEN)%'

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    public: false       # Allows optimizing the container by removing unused services; this also means
    # fetching services directly from the container via $container->get() won't work.
    # The best practice is to be explicit about your dependencies anyway.
    bind:
      $appName: '%env(APP_NAME)%'

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  # App\:
  #     resource: '../src/*'
  #     exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller'
    tags: [ 'controller.service_arguments' ]

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  App\:
    resource: '../src/*'
    public: true
    exclude:
      - '../src/Attribute'
      - '../src/Migrations'
      - '../src/Event'
      - '../src/Kernel.php'
      - '../src/Services/Entity'
      - '../src/Services/CollectionPoint/Data'
      - '../src/Services/CollectionPoint/Source'
      - '../src/Services/Consumer/DataPersister'

  _instanceof:
    App\Services\Url\Generator\GeneratorInterface:
      tags: ['app.url_generator']

  Knp\Bundle\TimeBundle\Templating\Helper\TimeHelper:
    '@time.templating.helper.time'

  App\Services\Consumer\ConsumerService:
    arguments: [ '@doctrine.orm.default_entity_manager', '%env(APP_NAME)%' ]

  App\Logging\RequestUrlLogger:
    arguments: [ '@logger' ]
    tags:
      - { name: monolog.logger, channel: request.url }

  App\Validator\Constraints\RouteExistsValidator:
    tags:
      - { name: validator.constraint_validator, alias: routeExists }

  Twig_Extensions_Extension_Intl:
    class: Twig_Extensions_Extension_Intl

  Symfony\Component\Cache\Adapter\TagAwareAdapter:
    class: Symfony\Component\Cache\Adapter\TagAwareAdapter
    arguments:
      $itemsPool: "@app.cache.file.data"
      $tagsPool: "@app.cache.file.tag"
    public: true

  App\Services\PsajdakService:
    arguments: [ '@old_sound_rabbit_mq.inbox_producer' ]

  App\Services\Attachment\AttachmentService:
    arguments: [ '@service_container' ]
